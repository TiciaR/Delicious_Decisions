{"version":3,"sources":["Styles/title.js","Navbar/Navbar.js","Styles/colors.js","Banner/Banner.js","Data/FoodData.js","Menu/FoodGrid.js","Menu/Menu.js","FoodDialog/QuantityInput.js","FoodDialog/Toppings.js","Hooks/useToppings.js","FoodDialog/Choices.js","FoodDialog/FoodDialog.js","Hooks/useQuantity.js","Hooks/useChoice.js","Styles/GlobalStyle.js","Order/Order.js","Wheel.js","App.js","Hooks/useOpenFood.js","Hooks/useOrders.js","Hooks/useTitle.js","serviceWorker.js","index.js"],"names":["Title","styled","div","NavbarStyled","Logo","Navbar","role","aria-label","Banner","formatPrice","price","toLocaleString","style","currency","foodItems","name","img","section","choices","foods","reduce","res","food","push","FoodGrid","FoodLabel","Food","Menu","setOpenFood","Object","entries","map","sectionName","onClick","QuantityInputStyled","input","IncrementContainer","IncrementButton","disabled","QuantityInput","quantity","setValue","value","ToppingGrid","ToppingCheckbox","CheckboxLabel","label","Toppings","toppings","checkTopping","topping","i","type","checked","useToppings","defaultTopping","useState","toppingsList","setToppings","index","newToppings","RadioInput","Label","Choices","openFood","choiceRadio","choice","id","onChange","for","Dialog","DialogContent","DialogFooter","ConfirmButton","DialogShadow","DialogBanner","DialogBannerName","getPrice","order","filter","t","length","FoodDialogContainer","setOrders","orders","defaultQuantity","e","target","useQuantity","defaultChoice","useChoice","isEditing","close","newOrders","FoodDialog","props","GlobalStyle","createGlobalStyle","OrderStyled","OrderContent","OrderContainer","editable","OrderItem","DetailItem","Order","subtotal","total","tax","cursor","stopPropagation","splice","deleteItem","join","Wheel","segments","seg_colors","winning_segment","onFinished","winner","console","log","primaryColor","contrastColor","buttonText","App","useOpenFood","useOrders","useEffect","document","title","useTitle","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69a1c4cc.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.div`\n  font-family: 'Righteous', cursive; \n`\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { pizzaRed } from \"../Styles/colors\";\nimport { Title } from \"../Styles/title\";\n\nconst NavbarStyled = styled.div`\n  background-color: ${pizzaRed};\n  padding: 10px;\n  position: fixed;\n  width: 100%;\n  z-index: 999;\n`;\n\nconst Logo = styled(Title)`\n  font-size: 20px;\n  color: white;\n  text-shadow: 1px 1px 4px #380502;\n`;\n\nexport function Navbar() {\n  return (\n    <NavbarStyled>\n      <Logo>\n        Delicious Decisions{\" \"}\n        <span role=\"img\" aria-label=\"pizza slice\">\n          \n        </span>\n      </Logo>\n    </NavbarStyled>\n  );\n}\n","export const pizzaRed = \"black\";\n","import styled from \"styled-components\";\n\nexport const Banner = styled.div`\n  height: 200px;\n  background-image: url(img/banner.jpeg);\n  background-position: center;\n  background-size: cover;\n  filter: contrast(75%);\n`;\n\n\n","export function formatPrice(price) {\n  return price.toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport const foodItems = [\n  {\n    name: \"Meals\",\n    img: \"/img/pizza.png\",\n    section: \"Panda Express\",\n    price: 1\n  },\n  {\n    name: \"Meals\",\n    img: \"/img/pizza2.jpeg\",\n    section: \"Qdoba\",\n    price: 1\n  },\n  {\n    name: \"Meals\",\n    img: \"/img/chicken-pizza.jpeg\",\n    section: \"Burger King\",\n    price: 1\n  },\n  {\n    img: \"/img/healthy-pizza.jpeg\",\n    name: \"Meals\",\n    section: \"Jimmy Johns\",\n    price: 1\n  },\n  {\n    img: \"/img/burger.jpeg\",\n    name: \"Meals\",\n    section: \"NYPD Pizza\",\n    price: 1\n  },\n  { img: \"/img/gyro.jpeg\", name: \"Meals\", section: \"Salad 'n' Go\", price: 4.5 },\n  {\n    img: \"/img/sandwich.jpeg\",\n    name: \"Meals\",\n    section: \"Pete's Fish and Chips\",\n    price: 1\n  },\n  {\n    img: \"/img/fries.jpeg\",\n    name: \"Meals\",\n    section: \"Filibertos\",\n    price: 1\n  },\n  {\n    price: 1,\n    name: \"Drinks/Coffee\",\n    section: \"Dunkin Donuts\",\n    choices: [\"Coffee\", \"Iced Coffee\", \"Bottled Drink\"]\n  }\n];\n\nexport const foods = foodItems.reduce((res, food) => {\n  if (!res[food.section]) {\n    res[food.section] = [];\n  }\n  res[food.section].push(food);\n  return res;\n}, {});\n\n\n\n","import styled from \"styled-components\";\nimport { Title } from \"../Styles/title\";\n\nexport const FoodGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  padding-bottom: 40px;\n`;\n\nexport const FoodLabel = styled(Title)`\n  position: absolute;\n  background-color: rgba(255, 255, 255, 0.8);\n  padding: 5px;\n`;\n\nexport const Food = styled.div`\n height: 100px; \n padding: 10px; \n font-size: 20px; \n background-image: ${({ img }) => `url(${img});`} \n background-position: center;\n background-size: cover;\n filter: contrast(75%); \n border-radius: 7px; \n margin-top: 5px; \n transition-property: box-shadow margin-top filter; \n transition-duration: .1s; \n box-shadow: 0px 0px 2px 0px grey;\n &:hover {\n  cursor: pointer; \n  filter: contrast(100%); \n  margin-top: 0px; \n  margin-bottom: 5px; \n  box-shadow: 0px 5px 10px 0px grey;\n }\n`;\n\n//  © created by react.school\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { foods } from \"../Data/FoodData\";\nimport { Food, FoodGrid, FoodLabel } from \"./FoodGrid\";\nimport { formatPrice } from \"../Data/FoodData\";\n\nconst MenuStyled = styled.div`\n  height: 1000px;\n  margin: 0px 400px 50px 20px;\n`;\n\nexport function Menu({ setOpenFood }) {\n  return (\n    // <MenuStyled>\n    <>\n      {Object.entries(foods).map(([sectionName, foods]) => (\n        <>\n          <h1> {sectionName} </h1>\n          <FoodGrid>\n            {foods.map(food => (\n              <Food\n                img={food.img}\n                onClick={() => {\n                  setOpenFood(food);\n                }}\n              >\n                <FoodLabel>\n                  <div>{food.name}</div>\n                  <div>{formatPrice(food.price)}</div>\n                </FoodLabel>\n              </Food>\n            ))}\n          </FoodGrid>\n        </>\n      ))}\n      </>\n    // </MenuStyled>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Title } from \"../Styles/title\";\nimport { pizzaRed } from \"../Styles/colors\";\n\nconst QuantityInputStyled = styled.input`\n  font-size: 18px;\n  width: 24px;\n  text-align: center;\n  border: none;\n  outline: none;\n`;\n\nconst IncrementContainer = styled(Title)`\n  display: flex;\n  height: 24px;\n`;\n\nconst IncrementButton = styled.div`\n  width: 23px;\n  color: ${pizzaRed};\n  font-size: 20px;\n  text-align: center;\n  cursor: pointer;\n  line-height: 23px;\n  margin: 0px 10px;\n  border: 1px solid ${pizzaRed};\n  ${({ disabled }) =>\n    disabled &&\n    `opacity: 0.5; \n     pointer-events: none; \n     `}\n  &:hover {\n    background-color: #ffe3e3;\n  }\n`;\n\nexport function QuantityInput({ quantity }) {\n  return (\n    <IncrementContainer>\n      <div>Quantity:</div>\n      <IncrementButton\n        onClick={() => {\n          quantity.setValue(quantity.value - 1);\n        }}\n        disabled={quantity.value === 1}\n      >\n        -\n      </IncrementButton>\n      <QuantityInputStyled {...quantity} />\n      <IncrementButton\n        onClick={() => {\n          quantity.setValue(quantity.value + 1);\n        }}\n      >\n        +\n      </IncrementButton>\n    </IncrementContainer>\n  );\n}\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst ToppingGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nconst ToppingCheckbox = styled.input`\n  margin-right: 10px;\n  cursor: pointer;\n`;\n\nconst CheckboxLabel = styled.label`\n  cursor: pointer;\n`;\n\nexport function Toppings({ toppings, checkTopping }) {\n  return (\n    <ToppingGrid>\n      {toppings.map((topping, i) => (\n        <CheckboxLabel>\n          <ToppingCheckbox\n            type=\"checkbox\"\n            checked={topping.checked}\n            onClick={() => {\n              checkTopping(i);\n            }}\n          />\n          {topping.name}\n        </CheckboxLabel>\n      ))}\n    </ToppingGrid>\n  );\n}\n","import { useState } from \"react\";\n\nexport function useToppings(defaultTopping) {\n  const [toppings, setToppings] = useState(\n    defaultTopping || getDefaultToppings()\n  );\n\n  function checkTopping(index) {\n    const newToppings = [...toppings];\n    newToppings[index].checked = !newToppings[index].checked;\n    setToppings(newToppings);\n  }\n\n  return {\n    checkTopping,\n    toppings\n  };\n}\n\nconst toppingsList = [\n  \"Extra Cheese\",\n  \"Pepperoni\",\n  \"Sausage\",\n  \"Onions\",\n  \"Peppers\",\n  \"Pineapple\",\n  \"Ham\",\n  \"Spinach\",\n  \"Artichokes\",\n  \"Mushrooms\",\n  \"Anchovies\"\n];\n\nfunction getDefaultToppings() {\n  return toppingsList.map(topping => ({\n    name: topping,\n    checked: false\n  }));\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CursorPointer = `cursor: pointer`;\n\nconst RadioInput = styled.input`\n  ${CursorPointer}\n`;\n\nconst Label = styled.label`\n  ${CursorPointer}\n`;\n\nexport function Choices({ openFood, choiceRadio }) {\n  return (\n    <>\n      <h3>Choose one</h3>\n      {openFood.choices.map(choice => (\n        <>\n          <RadioInput\n            type=\"radio\"\n            id={choice}\n            name=\"choice\"\n            value={choice}\n            checked={choiceRadio.value === choice}\n            onChange={choiceRadio.onChange}\n          />\n          <Label for={choice}> {choice} </Label>{\" \"}\n        </>\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FoodLabel } from \"../Menu/FoodGrid\";\nimport { pizzaRed } from \"../Styles/colors\";\nimport { Title } from \"../Styles/title\";\nimport { formatPrice } from \"../Data/FoodData\";\nimport { QuantityInput } from \"./QuantityInput\";\nimport { useQuantity } from \"../Hooks/useQuantity\";\nimport { Toppings } from \"./Toppings\";\nimport { useToppings } from \"../Hooks/useToppings\";\nimport { useChoice } from \"../Hooks/useChoice\";\nimport { Choices } from \"./Choices\";\n\nconst Dialog = styled.div`\n  width: 500px;\n  background-color: white;\n  position: fixed;\n  top: 75px;\n  z-index: 5;\n  max-height: calc(100% - 100px);\n  left: calc(50% - 250px);\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const DialogContent = styled.div`\n  overflow: auto;\n  min-height: 100px;\n  padding: 0px 40px;\n  padding-bottom: 80px;\n`;\n\nexport const DialogFooter = styled.div`\n  box-shadow: 0px -2px 10px 0px grey;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ConfirmButton = styled(Title)`\n  margin: 10px;\n  color: white;\n  height: 20px;\n  border-radius: 5px;\n  padding: 10px;\n  text-align: center;\n  width: 200px;\n  cursor: pointer;\n  background-color: ${pizzaRed};\n  ${({ disabled }) =>\n    disabled &&\n    `\n    opactity: .5; \n    background-color: grey; \n    pointer-events: none; \n  `}\n`;\n\nconst DialogShadow = styled.div`\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0px;\n  background-color: black;\n  opacity: 0.7;\n  z-index: 4;\n`;\n\nconst DialogBanner = styled.div`\n  min-height: 200px;\n  margin-bottom: 20px;\n  ${({ img }) => (img ? `background-image: url(${img});` : `min-height: 75px;`)}\n  background-position: center;\n  background-size: cover;\n`;\n\nconst DialogBannerName = styled(FoodLabel)`\n  font-size: 30px;\n  padding: 5px 40px;\n  top: ${({ img }) => (img ? `100px` : `20px`)};\n`;\n\nconst pricePerTopping = 0.5;\n\nexport function getPrice(order) {\n  return (\n    order.quantity *\n    (order.price +\n      order.toppings.filter(t => t.checked).length * pricePerTopping)\n  );\n}\n\nfunction hasToppings(food) {\n  return food.section === \"Pizza\";\n}\n\nfunction FoodDialogContainer({ openFood, setOpenFood, setOrders, orders }) {\n  const quantity = useQuantity(openFood && openFood.quantity);\n  const toppings = useToppings(openFood.toppings);\n  const choiceRadio = useChoice(openFood.choice);\n  const isEditing = openFood.index > -1;\n\n  function close() {\n    setOpenFood();\n  }\n\n  const order = {\n    ...openFood,\n    quantity: quantity.value,\n    toppings: toppings.toppings,\n    choice: choiceRadio.value\n  };\n\n  function editOrder() {\n    const newOrders = [...orders];\n    newOrders[openFood.index] = order;\n    setOrders(newOrders);\n    close();\n  }\n\n  function addToOrder() {\n    setOrders([...orders, order]);\n    close();\n  }\n\n  return (\n    <>\n      <DialogShadow onClick={close} />\n      <Dialog>\n        <DialogBanner img={openFood.img}>\n          <DialogBannerName> {openFood.name} </DialogBannerName>\n        </DialogBanner>\n        <DialogContent>\n          <QuantityInput quantity={quantity} />\n          {hasToppings(openFood) && (\n            <>\n              <h3> Would you like toppings? </h3>\n              <Toppings {...toppings} />\n            </>\n          )}\n          {openFood.choices && (\n            <Choices openFood={openFood} choiceRadio={choiceRadio} />\n          )}\n        </DialogContent>\n        <DialogFooter>\n          <ConfirmButton\n            onClick={isEditing ? editOrder : addToOrder}\n            disabled={openFood.choices && !choiceRadio.value}\n          >\n            {isEditing ? `Update order: ` : `Add to order: `}\n            {formatPrice(getPrice(order))}\n          </ConfirmButton>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n}\n\nexport function FoodDialog(props) {\n  if (!props.openFood) return null;\n  return <FoodDialogContainer {...props} />;\n}\n","import { useState } from \"react\";\n\nexport function useQuantity(defaultQuantity) {\n  const [value, setValue] = useState(defaultQuantity || 1);\n\n  function onChange(e) {\n    if (!(+e.target.value >= 1)) {\n      setValue(1);\n      return;\n    }\n    setValue(+e.target.value);\n  }\n\n  return {\n    value,\n    setValue,\n    onChange\n  };\n}\n","import { useState } from \"react\";\n\nexport function useChoice(defaultChoice) {\n  const [value, setValue] = useState(defaultChoice);\n\n  function onChange(e) {\n    setValue(e.target.value);\n  }\n\n  return {\n    value,\n    onChange\n  };\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0; \n    font-family: 'Open Sans', sans-serif;\n  }\n  \n  h1, h2, h3 {\n    font-family: 'Righteous', cursive;\n  }\n  \n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  DialogContent,\n  DialogFooter,\n  ConfirmButton\n} from \"../FoodDialog/FoodDialog\";\nimport { formatPrice } from \"../Data/FoodData\";\nimport { getPrice } from \"../FoodDialog/FoodDialog\";\n\nconst OrderStyled = styled.div`\n  position: fixed;\n  right: 0px;\n  top: 48px;\n  width: 340px;\n  background-color: white;\n  height: calc(100% - 48px);\n  z-index: 10;\n  box-shadow: 4px 0px 5px 4px grey;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst OrderContent = styled(DialogContent)`\n  padding: 20px;\n  height: 100%;\n`;\n\nconst OrderContainer = styled.div`\n  padding: 10px 0px;\n  border-bottom: 1px solid grey;\n  ${({ editable }) =>\n    editable\n      ? `\n    &:hover {\n      cursor: pointer;\n      background-color: #e7e7e7;\n    }\n  `\n      : `\n    pointer-events: none; \n  `}\n`;\n\nconst OrderItem = styled.div`\n  padding: 10px 0px;\n  display: grid;\n  grid-template-columns: 20px 150px 20px 60px;\n  justify-content: space-between;\n`;\n\nconst DetailItem = styled.div`\n  color: gray;\n  font-size: 10px;\n`;\n\nexport function Order({ orders, setOrders, setOpenFood }) {\n  const subtotal = orders.reduce((total, order) => {\n    return total + getPrice(order);\n  }, 0);\n  const tax = subtotal * 0.07;\n  const total = subtotal + tax;\n\n  const deleteItem = index => {\n    const newOrders = [...orders];\n    newOrders.splice(index, 1);\n    setOrders(newOrders);\n  };\n\n  return (\n    <OrderStyled>\n      {orders.length === 0 ? (\n        <OrderContent>Your order's looking pretty empty.</OrderContent>\n      ) : (\n        <OrderContent>\n          {\" \"}\n          <OrderContainer> Your Order: </OrderContainer>{\" \"}\n          {orders.map((order, index) => (\n            <OrderContainer editable>\n              <OrderItem\n                onClick={() => {\n                  setOpenFood({ ...order, index });\n                }}\n              >\n                <div>{order.quantity}</div>\n                <div>{order.name}</div>\n                <div\n                  style={{ cursor: \"pointer\" }}\n                  onClick={e => {\n                    e.stopPropagation();\n                    deleteItem(index);\n                  }}\n                >\n                  🗑\n                </div>\n                <div>{formatPrice(getPrice(order))}</div>\n              </OrderItem>\n              <DetailItem>\n                {order.toppings\n                  .filter(t => t.checked)\n                  .map(topping => topping.name)\n                  .join(\", \")}\n              </DetailItem>\n              {order.choice && <DetailItem>{order.choice}</DetailItem>}\n            </OrderContainer>\n          ))}\n          <OrderContainer>\n            <OrderItem>\n              <div />\n              <div>Sub-Total</div>\n              <div>{formatPrice(subtotal)}</div>\n            </OrderItem>\n            <OrderItem>\n              <div />\n              <div>Tax</div>\n              <div>{formatPrice(tax)}</div>\n            </OrderItem>\n            <OrderItem>\n              <div />\n              <div>Total</div>\n              <div>{formatPrice(total)}</div>\n            </OrderItem>\n          </OrderContainer>\n        </OrderContent>\n      )}\n      <DialogFooter>\n        <ConfirmButton>Checkout</ConfirmButton>\n      </DialogFooter>\n    </OrderStyled>\n  );\n}\n","import React, { Component } from 'react'\n \nimport {WheelComponent} from 'react-wheel-of-prizes'\nimport 'react-wheel-of-prizes/dist/index.css'\nimport {foodItems} from \"./Data/FoodData.js\"\n \nconst Wheel = () => {\n  const segments = foodItems.map(e=>e.section)\n  const seg_colors = [\n    \"#EE4040\",\n    \"#F0CF50\",\n    \"#815CD1\",\n    \"#3DA5E0\",\n    \"#34A24F\",\n    \"#F9AA1F\",\n    \"#EC3F3F\",\n    \"#FF9000\",\n  ];\n  const onFinished = (winner) => {\n    console.log(winner);\n  }\n  return <WheelComponent\n  segments = {segments}\n  seg_colors = {seg_colors} \n  winning_segment ='won 10'\n  onFinished={(winner)=>onFinished(winner)}\n  primaryColor='black'\n  contrastColor='white'\n  buttonText='Spin'/>\n}\n\nexport default Wheel;","import React, { useState } from \"react\";\nimport { Navbar } from \"./Navbar/Navbar\";\nimport { Banner } from \"./Banner/Banner\";\nimport { Menu } from \"./Menu/Menu\";\nimport { FoodDialog } from \"./FoodDialog/FoodDialog\";\nimport { GlobalStyle } from \"./Styles/GlobalStyle\";\nimport { Order } from \"./Order/Order\";\nimport { useOpenFood } from \"./Hooks/useOpenFood\";\nimport { useOrders } from \"./Hooks/useOrders\";\nimport { useTitle } from \"./Hooks/useTitle\";\nimport Wheel from \"./Wheel.js\";\n\n\nfunction App() {\n  const openFood = useOpenFood();\n  const orders = useOrders();\n  useTitle({ ...openFood, ...orders });\n\n  return (\n    <>\n      <GlobalStyle />\n      <FoodDialog {...openFood} {...orders} />\n      <Navbar />\n      <Order {...orders} {...openFood} />\n      <Banner />\n      <Menu {...openFood} />\n      <Wheel />\n      \n    </>\n  );\n}\n\nexport default App;\n\n\n","import { useState } from \"react\";\n\nexport function useOpenFood() {\n  const [openFood, setOpenFood] = useState();\n  return {\n    openFood,\n    setOpenFood\n  };\n}\n","import { useState } from \"react\";\n\nexport function useOrders() {\n  const [orders, setOrders] = useState([]);\n  return {\n    orders,\n    setOrders\n  };\n}\n","import { useEffect } from \"react\";\n\nexport function useTitle({ openFood, orders }) {\n  useEffect(() => {\n    if (openFood) {\n      document.title = openFood.name;\n    } else {\n      document.title =\n        orders.length === 0\n          ? `Delicious Decisions`\n          : `[${orders.length}] items in your order! `;\n    }\n  });\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}